###############################################################################
# SYSLIB SOC Initialization Configuration
#
#  This is a sample configuration file which is provided by SYSLIB for
#  K2L. The function allows the SYSLIB SOC Initialization application to
#  cycle through and initialize all the CPDMA blocks with the specified
#  configuration.
#
#  Please ensure that the CPDMA identifiers match the DMA identifiers
#  specified in the cppi_drv.h. Failure to do so can result in fatal
#  errors.
#
#  By default all the CPDMA blocks are not powered on which implies that the
#  CPDMA configuration cannot be done. For such CPDMA blocks please ensure
#  that the 'power_up' flag is set.
#
# NOTE:
# (C) Copyright 2015 Texas Instruments, Inc.
###############################################################################

dma
{
    #
    # DMA name
    #
    name                = fftc_a

    #
    # CPDMA Enumeration as specified in the CPPI Driver
    #
    cpdma_id            = 2

    #
    # Status flag which allows the SYSLIB SOC Init application to power up
    # the CPDMA. If the flag is not set, the CPDMA block is powered off and
    # the device configuration specified below cannot take affect.
    #
    # NOTE: Not all peripherals can be powered up by the SOC Init application
    # in which case the error is reported. Applications can perform custom
    # power up for those peripherals.
    #
    power_up            = 1

    #
    # Timeout Count:
    #
    timeout_count       = 3000

    #
    # Write FIFO Depth:
    #
    write_fifo_depth    = 0

    #
    # Priority of all receive transactions of this CPDMA
    #
    rx_priority            = 1

    #
    # Priority of all transmit transactions of this CPDMA
    #
    tx_priority            = 1
}

dma
{
    #
    # DMA name
    #
    name                = fftc_b

    #
    # CPDMA Enumeration as specified in the CPPI Driver
    #
    cpdma_id            = 3

    #
    # Status flag which allows the SYSLIB SOC Init application to power up
    # the CPDMA. If the flag is not set, the CPDMA block is powered off and
    # the device configuration specified below cannot take affect.
    #
    # NOTE: Not all peripherals can be powered up by the SOC Init application
    # in which case the error is reported. Applications can perform custom
    # power up for those peripherals.
    #
    power_up            = 1

    #
    # Timeout Count:
    #
    timeout_count       = 3000

    #
    # Write FIFO Depth:
    #
    write_fifo_depth    = 0

    #
    # Priority of all receive transactions of this CPDMA
    #
    rx_priority            = 2

    #
    # Priority of all transmit transactions of this CPDMA
    #
    tx_priority            = 2
}

dma
{
    #
    # DMA name
    #
    name                = netcp

    #
    # CPDMA Enumeration as specified in the CPPI Driver
    #
    cpdma_id            = 8

    #
    # Timeout Count:
    #
    timeout_count       = 0

    #
    # Write FIFO Depth:
    #
    write_fifo_depth    = 0

    #
    # Priority of all receive transactions of this CPDMA
    #
    rx_priority            = 0

    #
    # Priority of all transmit transactions of this CPDMA
    #
    tx_priority            = 0
}

dma
{
    #
    # DMA name
    #
    name                = qmss

    #
    # CPDMA Enumeration as specified in the CPPI Driver
    #
    cpdma_id            = 9

    #
    # Timeout Count:
    #
    timeout_count       = 65535

    #
    # Write FIFO Depth:
    #
    write_fifo_depth    = 0

    #
    # Priority of all receive transactions of this CPDMA
    #
    rx_priority            = 7

    #
    # Priority of all transmit transactions of this CPDMA
    #
    tx_priority            = 7
}

dma
{
    #
    # DMA name
    #
    name                = bcp

    #
    # CPDMA Enumeration as specified in the CPPI Driver
    #
    cpdma_id            = 11

    #
    # Status flag which allows the SYSLIB SOC Init application to power up
    # the CPDMA. If the flag is not set, the CPDMA block is powered off and
    # the device configuration specified below cannot take affect.
    #
    # NOTE: Not all peripherals can be powered up by the SOC Init application
    # in which case the error is reported. Applications can perform custom
    # power up for those peripherals.
    #
    power_up            = 1

    #
    # Timeout Count:
    #
    timeout_count       = 3000

    #
    # Write FIFO Depth:
    #
    write_fifo_depth    = 0

    #
    # Priority of all receive transactions of this CPDMA
    #
    rx_priority            = 2

    #
    # Priority of all transmit transactions of this CPDMA
    #
    tx_priority            = 2
}

dma
{
    #
    # DMA name
    #
    name                = local

    #
    # CPDMA Enumeration as specified in the CPPI Driver
    #
    cpdma_id            = 13

    #
    # Status flag which allows the SYSLIB SOC Init application to power up
    # the CPDMA. If the flag is not set, the CPDMA block is powered off and
    # the device configuration specified below cannot take affect.
    #
    # NOTE: Not all peripherals can be powered up by the SOC Init application
    # in which case the error is reported. Applications can perform custom
    # power up for those peripherals.
    #
    power_up            = 0

    #
    # Timeout Count:
    #
    timeout_count       = 0

    #
    # Write FIFO Depth:
    #
    write_fifo_depth    = 0

    #
    # Priority of all receive transactions of this CPDMA
    #
    rx_priority            = 2

    #
    # Priority of all transmit transactions of this CPDMA
    #
    tx_priority            = 2
}

peripheral
{
    #
    # Peripheral name
    #
    name		= tcp3d

    #
    # instance Id within that peripheral
    #
    instance_id		= 0

    #
    # Status flag which allows the SYSLIB SOC Init application to power up
    # the peripheral
    #
    power_up		= 1

    
}

peripheral
{
    #
    # Peripheral name
    #
    name		= tcp3d

    #
    # instance Id within that peripheral
    #
    instance_id		= 1

    #
    # Status flag which allows the SYSLIB SOC Init application to power up
    # the peripheral
    #
    power_up		= 1

    
}

peripheral
{
    #
    # Peripheral name
    #
    name		= vcp

    #
    # instance Id within that peripheral
    #
    instance_id		= 0

    #
    # Status flag which allows the SYSLIB SOC Init application to power up
    # the peripheral
    #
    power_up		= 1

    
}

peripheral
{
    #
    # Peripheral name
    #
    name		= vcp

    #
    # instance Id within that peripheral
    #
    instance_id		= 1

    #
    # Status flag which allows the SYSLIB SOC Init application to power up
    # the peripheral
    #
    power_up		= 1

    
}

bcp
{
    #
    # instance Id within that peripheral
    #
    instance_id = 0

    #
    # Queues to Port Mappings. Value is the port numbers for the Queues in ascending order and separated by semicolon. 
    # First value is the port number for Tx Q0, second for Tx Q1, and so on.
    # exact BCP_MAX_NUM_TXQUEUES values should be present
    # For LTE dual carrier, 
    #   Tx Q0 --) PPB0   Tx Q1 --) PPB1  TX Q2 --) PPB2  Tx Q3 --) PPB3
    #   Tx Q4 --) PPB0   Tx Q5 --) PPB1  TX Q6 --) PPB2  Tx Q7 --) PPB3 
    #
    Q_PPBMap = 0;1;1;1;2;3;3;3

    #
    # Queues Priority. Value is the priorities for the Queues in ascending order and separated by semicolon.   
    # First value is the priority value for Tx Q0, second for Tx Q1, and so on.
    # exact BCP_MAX_NUM_TXQUEUES values should be present
    # For LTE dual carrier: All are at the same priority for now.
    Q_PRI = 0;0;0;0;0;0;0;0

    
}

ddr
{
    #
    # instance ID
    # 0 - DDR3A
    # 1 - DDR3B
    #
    instance_id = 0

    # see DDR3 Memory Controller documentation (spruhn7c) 
    # for explanation of these registers
    # 
    VBUSM_CONFIG = 0x00FF20FF
    
    MSTID_COS_1_MAP = 0x00000000

    MSTID_COS_2_MAP = 0x81A00000
}

