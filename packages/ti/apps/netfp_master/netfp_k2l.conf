#########################################################
# NETFP master configuration file:
#########################################################

#
# Reassembly Handling: The flag is set to indicate that the reassembly
# should be handled by the NETFP master. If set then please ensure that
# the required reassembly parameters are also specified
#
reassembly_handling     = 1

#
# Number of descriptors which are allocated to receive the fragments
#
reassembly_descriptors  = 64

#
# Reassembly timeout (in seconds) which is used to cleanup fragments from the reassembly
# context
#
reassembly_timeout      = 30

#
# Number of reassembly context which are used to perform packet reassembly. Fragments
# are mapped to a reassembly context
#
reassembly_context      = 128

#
# Base Queue number used for Physical interfaces. It is configured as the queue number for "eth0"
#
interface_base_queue    = 528

#
# Base Flow number used for Physical interfaces, It is configured as the flow for "eth0"
#
interface_base_flow     = 22

#
# Global flag which indicates if the enhanced QOS configuration should be configured for
# the entire system. If the flag is set to 0; only the marking map in the interface section
# is used and the remaining fields are ignored.
#
enable_eQOS             = 1

#
# UDP port number used in the UDP encapsulation of ESP payload for NAT traversal. Port number 0
# disables NAT-T feature.
#
natt_dstPort           = 4500

#
# NATT settings to use wild carded Src IP address when programing NAT-T LUT entries
#
natt_wildCardedEntry   = 0

#
# This is the priority of the host generated non-ip packets
#
default_host_priority   = 0

interface
{
    #
    # Interface name
    #
    name             = eth0

    #
    # Broadcast preclassification enable status: The NETCP can be programmed to route
    # broadcast packets prior to the LUT1-0 lookup.
    #
    broadcast_preclassification = 1

    #
    # Broadcast preclassification flow identifier: This field is applicable only if broadcast
    # preclassification is enabled. This is the flow identifier used to receive the broadcast
    # packets. This is configured to use the "eth0" flow identifier
    #
    broadcast_preclassification_flowId = 22

    #
    # Broadcast preclassification queue identifier: This field is applicable only if broadcast
    # preclassification is enabled. This is the queue identifier to which the broadcast packets
    # will be placed. This is configured to use the "eth0" receive queue
    #
    broadcast_preclassification_queueId = 528

    #
    # Multicast preclassification enable status: The NETCP can be programmed to route
    # multicast packets prior to the LUT1-0 lookup.
    #
    multicast_preclassification = 1

    #
    # Multicast preclassification flow identifier: This field is applicable only if multicast
    # preclassification is enabled. This is the flow identifier used to receive the multicast
    # packets. This is configured to use the "eth0" flow identifier
    #
    multicast_preclassification_flowId = 22

    #
    # Multicast preclassification queue identifier: This field is applicable only if multicast
    # preclassification is enabled. This is the queue identifier to which the multicast packets
    # will be placed. This is configured to use the "eth0" receive queue
    #
    multicast_preclassification_queueId = 528

    #
    # Routing mode indicates to the eQoS the execution mode. The NETCP supports 2 routing modes:
    #  - dscp
    #  - dp-bit
    # For more information about the routing modes and how the eQoS shapes the data please refer
    # to the PA LLD documentation.
    #
    routing_mode = dscp

    #
    # Priority Override: This is valid only if the routing mode is dp-bit. Else this value
    # is ignored.
    #
    priority_override = 0

    #
    # Default forwarding priority which is used to forward non-ip packets
    #
    default_forwarding_priority = 1

    #
    # Switch port number to which the interface is attached. This needs to be specified for
    # each physical interface in the system. This configuration should never be changed
    #
    switch_port = 1

    #
    # Base Queue number used by the L2 shaper. The queue number should match the DTS file
    # All queue_offset are relative to this base queue.
    #
    base_queue = 6400

    #
    # Flow configuration: Packets are passed to the eQoS via NETCP flows. The eQoS supports
    # multiple flows and it is possible to configure packets with different priorities to use
    # different NETCP flows. The configuration is specified as follows:
    #     flow_offset, numDescriptors
    #
    # Each interface has a base flow identifier which is internally allocated. The numDescriptors
    # is the number of free descriptors which are allocated and placed in the receive free queue
    # associated with the flow.
    #
    # NOTE: There should be at least 1 flow_configuration always present per interface
    #
    flow_configuration = <0,  4096>

    #
    # eQoS Shaper configuration:
    #
    # There are 64 DSCP entries which map each DSCP entry to use the following convention:
    #    dscp, flow_offset, queue_offset
    #
    # The eQoS shaper uses this configuration to receive packets with a specific DSCP into
    # the NETCP subsystem.
    #
    # NOTE: Any DSCP value not specified will default to Flow offset 0 and Queue offset 0.
    #
    dscp_map = <0,  0,  1>
    dscp_map = <1,  0,  2>
    dscp_map = <2,  0,  3>
    dscp_map = <32, 0,  4>
    dscp_map = <33, 0,  7>

    #
    # Shaper configuration:
    #
    # There are 8 VLAN priorities entries which map each vlan priority to use the following
    # convention:
    #    vlan_priority, flow_offset, queue_offset
    #
    # The eQoS shaper uses this configuration to receive packets with a specific VLAN priority
    # into the NETCP subsystem.
    #
    # NOTE: Any VLAN priority not specified will default to Flow offset 0 and Queue offset 0.
    #
    vlan_map = <0, 0, 0>
    vlan_map = <1, 0, 0>
    vlan_map = <7, 0, 7>

    #
    # Marking Table:
    #
    # The section is used to map the inner DSCP value to outer DSCP value
    #
    # Entries should use the following convention:
    #  inner_dscp_value,  outer_dscp_value
    #
    # Default value would mark the packets with outer DSCP value of 0.
    innerToOuterDSCP_map = <1, 32>
    innerToOuterDSCP_map = <2, 33>
}

interface
{
    #
    # Interface name
    #
    name             = eth1

    #
    # Broadcast preclassification enable status: The NETCP can be programmed to route
    # broadcast packets prior to the LUT1-0 lookup.
    #
    broadcast_preclassification = 1

    #
    # Broadcast preclassification flow identifier: This field is applicable only if broadcast
    # preclassification is enabled. This is the flow identifier used to receive the broadcast
    # packets. This is configured to use the "eth1" flow identifier
    #
    broadcast_preclassification_flowId = 23

    #
    # Broadcast preclassification queue identifier: This field is applicable only if broadcast
    # preclassification is enabled. This is the queue identifier to which the broadcast packets
    # will be placed. This is configured to use the "eth1" receive queue
    #
    broadcast_preclassification_queueId = 529

    #
    # Multicast preclassification enable status: The NETCP can be programmed to route
    # multicast packets prior to the LUT1-0 lookup.
    #
    multicast_preclassification = 1

    #
    # Multicast preclassification flow identifier: This field is applicable only if multicast
    # preclassification is enabled. This is the flow identifier used to receive the multicast
    # packets. This is configured to use the "eth1" flow identifier
    #
    multicast_preclassification_flowId = 23

    #
    # Multicast preclassification queue identifier: This field is applicable only if multicast
    # preclassification is enabled. This is the queue identifier to which the multicast packets
    # will be placed. This is configured to use the "eth1" receive queue
    #
    multicast_preclassification_queueId = 529

    #
    # Routing mode indicates to the eQoS the execution mode. The NETCP supports 2 routing modes:
    #  - dscp
    #  - dp-bit
    # For more information about the routing modes and how the eQoS shapes the data please refer
    # to the PA LLD documentation.
    #
    routing_mode     = dp-bit

    #
    # Priority Override: This is valid only if the routing mode is dp-bit. Else this value
    # is ignored.
    #
    priority_override = 1

    #
    # Default forwarding priority which is used to forward non-ip packets
    #
    default_forwarding_priority = 3

    #
    # Switch port number to which the interface is attached. This needs to be specified for
    # each physical interface in the system. This configuration should never be changed
    #
    switch_port = 2

    #
    # Base Queue number used by the L2 shaper. The queue number should match the DTS file
    # All queue_offset are relative to this base queue.
    #
    base_queue = 6410

    #
    # Flow configuration: Packets are passed to the eQoS via NETCP flows. The eQoS supports
    # multiple flows and it is possible to configure packets with different priorities to use
    # different NETCP flows. The configuration is specified as follows:
    #     flow_offset, numDescriptors
    #
    # Each interface has a base flow identifier which is internally allocated. The numDescriptors
    # is the number of free descriptors which are allocated and placed in the receive free queue
    # associated with the flow.
    #
    # NOTE: There should be at least 1 flow_configuration always present per interface
    #
    flow_configuration = <0,  1024>

    #
    # eQoS Shaper configuration:
    #
    # There are 64 DSCP entries which map each DSCP entry to use the following convention:
    #    dscp, flow_offset, queue_offset
    #
    # The eQoS shaper uses this configuration to receive packets with a specific DSCP into
    # the NETCP subsystem.
    #
    # NOTE: Any DSCP value not specified will default to Flow offset 0 and Queue offset 0.
    #
    dscp_map = <0,  0, 0>
    dscp_map = <1,  0, 0>
    dscp_map = <2,  0, 0>
    dscp_map = <3,  0, 0>

    #
    # Shaper configuration:
    #
    # There are 8 VLAN priorities entries which map each vlan priority to use the following
    # convention:
    #    vlan_priority, flow_offset, queue_offset
    #
    # The eQoS shaper uses this configuration to receive packets with a specific VLAN priority
    # into the NETCP subsystem.
    #
    # NOTE: Any VLAN priority not specified will default to Flow offset 0 and Queue offset 0.
    #
    vlan_map = <0, 0, 0>
    vlan_map = <1, 0, 0>
    vlan_map = <7, 0, 0>

    #
    # Marking Table:
    #
    # The section is used to map the inner DSCP value to outer DSCP value
    #
    # Entries should use the following convention:
    #  inner_dscp_value,  outer_dscp_value
    #
    # Default value would mark the packets with outer DSCP value of 0.
    innerToOuterDSCP_map = <1, 1>
    innerToOuterDSCP_map = <2, 2>
    innerToOuterDSCP_map = <3, 3>
    innerToOuterDSCP_map = <4, 4>
    innerToOuterDSCP_map = <5, 5>
}

