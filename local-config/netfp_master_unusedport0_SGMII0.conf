interface
{
    #
    # Interface name
    #
    name             = unusedport0

    #
    # Preclassification enable status: The NETCP can be programmed to route broadcast
    # packets prior to the LUT1-0 lookup.
    #
    broadcast_preclassification    = 1

    #
    # Preclassification flow identifier: This field is applicable only if preclassification is
    # enabled. This is the flow identifier used to receive the broadcast packets.
    # This is configured to use the "eth0" flow identifier
    #
    broadcast_preclassification_flowId    = 22

    #
    # Preclassification queue identifier: This field is applicable only if preclassification is
    # enabled. This is the queue identifier to which the broadcast packets will be placed
    # This is configured to use the "eth0" receive queue
    #
    broadcast_preclassification_queueId   = 8704

    #
    # Preclassification enable status: The NETCP can be programmed to route multicast
    # packets prior to the LUT1-0 lookup.
    #
    multicast_preclassification    = 1

    #
    # Preclassification flow identifier: This field is applicable only if preclassification is
    # enabled. This is the flow identifier used to receive the multicast packets.
    # This is configured to use the "eth0" flow identifier
    #
    multicast_preclassification_flowId    = 22

    #
    # Preclassification queue identifier: This field is applicable only if preclassification is
    # enabled. This is the queue identifier to which the multicast packets will be placed
    # This is configured to use the "eth0" receive queue
    #
    multicast_preclassification_queueId   = 8704

    #
    # Routing mode indicates to the eQoS the execution mode. The NETCP supports 2 routing modes:
    #  - dscp
    #  - dp-bit
    # For more information about the routing modes and how the eQoS shapes the data please refer
    # to the PA LLD documentation.
    #
    routing_mode	 = dscp

    #
    # Priority Override: This is valid only if the routing mode is dp-bit. Else this value
    # is ignored.
    #
    priority_override = 1

    #
    # Default forwarding priority which is used to forward non-ip packets 
    #
    default_forwarding_priority = 0

    #
    # Switch port number to which the interface is attached. This needs to be specified for
    # each physical interface in the system. This configuration should never be changed
    #
    switch_port		 = 1

    #
    # Base Queue number used by the L2 shaper. The queue number should match the DTS file
    # All queue_offset are relative to this base queue.
    #
    base_queue       = 13772

    #
    # Flow configuration: Packets are passed to the eQoS via NETCP flows. The eQoS supports
    # multiple flows and it is possible to configure packets with different priorities to use
    # different NETCP flows. The configuration is specified as follows:
    #     flow_offset, numDescriptors
    #
    # Each interface has a base flow identifier which is internally allocated. The numDescriptors
    # is the number of free descriptors which are allocated and placed in the receive free queue
    # associated with the flow.
    #
    # NOTE: There should be at least 1 flow_configuration always present per interface
    #
    flow_configuration = <0,  1440>

    #
    # eQoS Shaper configuration:
    #
    # There are 64 DSCP entries which map each DSCP entry to use the following convention:
    #	dscp, flow_offset, queue_offset
    #
    # The eQoS shaper uses this configuration to receive packets with a specific DSCP into
    # the NETCP subsystem.
    #
    # NOTE: Any DSCP value not specified will default to Flow offset 0 and Queue offset 0.
    #
    dscp_map = <0,  0,  0>

    #
    # Shaper configuration:
    #
    # There are 8 VLAN priorities entries which map each vlan priority to use the following
    # convention:
    #	vlan_priority, flow_offset, queue_offset
    #
    # The eQoS shaper uses this configuration to receive packets with a specific VLAN priority
    # into the NETCP subsystem.
    #
    # NOTE: Any VLAN priority not specified will default to Flow offset 0 and Queue offset 0.
    #
    vlan_map = <0, 0, 0>

    #
    # Marking Table:
    #
    # The section is used to map the inner DSCP value to outer DSCP value.
    #
    # Entries should use the following convention:
    #  inner_dscp_value,  outer_dscp_value
    #
    # Default value would mark the packets with outer DSCP value of 0.
    innerToOuterDSCP_map = <0, 0>
    innerToOuterDSCP_map = <1, 1>
    innerToOuterDSCP_map = <2, 2>
    innerToOuterDSCP_map = <3, 3>
    innerToOuterDSCP_map = <4, 4>
    innerToOuterDSCP_map = <5, 5>
    innerToOuterDSCP_map = <6, 6>
    innerToOuterDSCP_map = <7, 7>
    innerToOuterDSCP_map = <8, 8>
    innerToOuterDSCP_map = <9, 9>
    innerToOuterDSCP_map = <10, 10>
    innerToOuterDSCP_map = <11, 11>
    innerToOuterDSCP_map = <12, 12>
    innerToOuterDSCP_map = <13, 13>
    innerToOuterDSCP_map = <14, 14>
    innerToOuterDSCP_map = <15, 15>
    innerToOuterDSCP_map = <16, 16>
    innerToOuterDSCP_map = <17, 17>
    innerToOuterDSCP_map = <18, 18>
    innerToOuterDSCP_map = <19, 19>
    innerToOuterDSCP_map = <20, 20>
    innerToOuterDSCP_map = <21, 21>
    innerToOuterDSCP_map = <22, 22>
    innerToOuterDSCP_map = <23, 23>
    innerToOuterDSCP_map = <24, 24>
    innerToOuterDSCP_map = <25, 25>
    innerToOuterDSCP_map = <26, 26>
    innerToOuterDSCP_map = <27, 27>
    innerToOuterDSCP_map = <28, 28>
    innerToOuterDSCP_map = <29, 29>
    innerToOuterDSCP_map = <30, 30>
    innerToOuterDSCP_map = <31, 31>
    innerToOuterDSCP_map = <32, 32>
    innerToOuterDSCP_map = <33, 33>
    innerToOuterDSCP_map = <34, 34>
    innerToOuterDSCP_map = <35, 35>
    innerToOuterDSCP_map = <36, 36>
    innerToOuterDSCP_map = <37, 37>
    innerToOuterDSCP_map = <38, 38>
    innerToOuterDSCP_map = <39, 39>
    innerToOuterDSCP_map = <40, 40>
    innerToOuterDSCP_map = <41, 41>
    innerToOuterDSCP_map = <42, 42>
    innerToOuterDSCP_map = <43, 43>
    innerToOuterDSCP_map = <44, 44>
    innerToOuterDSCP_map = <45, 45>
    innerToOuterDSCP_map = <46, 46>
    innerToOuterDSCP_map = <47, 47>
    innerToOuterDSCP_map = <48, 48>
    innerToOuterDSCP_map = <49, 49>
    innerToOuterDSCP_map = <50, 50>
    innerToOuterDSCP_map = <51, 51>
    innerToOuterDSCP_map = <52, 52>
    innerToOuterDSCP_map = <53, 53>
    innerToOuterDSCP_map = <54, 54>
    innerToOuterDSCP_map = <55, 55>
    innerToOuterDSCP_map = <56, 56>
    innerToOuterDSCP_map = <57, 57>
    innerToOuterDSCP_map = <58, 58>
    innerToOuterDSCP_map = <59, 59>
    innerToOuterDSCP_map = <60, 60>
    innerToOuterDSCP_map = <61, 61>
    innerToOuterDSCP_map = <62, 62>
    innerToOuterDSCP_map = <63, 63>
}

